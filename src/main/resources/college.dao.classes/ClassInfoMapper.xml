<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="college.dao.classes.ClassInfoMapper">
    <resultMap id="ClassResultMap" type="college.classes.Classes">
        <id property="id" column="c_id"></id>
        <result property="name" column="c_name"/>
        <association property="teacher" javaType="college.teacher.Teacher">
            <id property="id" column="t_id"></id>
            <result property="name" column="t_name"/>
        </association>
    </resultMap>
    <!--
        方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集
                 封装联表查询的数据(去除重复的数据)
            select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=1
        -->
    <select id="getClasses" parameterType="java.lang.Integer" resultMap="ClassResultMap">
        select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=#{id}
    </select>

    <!--
    方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型
        SELECT * FROM class WHERE c_id=1;
        SELECT * FROM teacher WHERE t_id=1   //1 是上一个查询得到的teacher_id的值
    -->
    <select id="getClassA" parameterType="java.lang.Integer" resultMap="ClassResultMap">

    </select>
</mapper>